#include "cubeplex.h"

int color = red;

void setup() {
  initCube();
  animationMax = 600;
}
void loop() {
  RandomLines2();
}

/****************************** #7 RandomLines2 *******************************\
| total rewrite of #6 RandomLines (from 400 lines of code to just over 100)    |
|                                                                              |
| Written By: Jules Meredith                                                   |
| (using Asher Glick's cubeplex.h/mappings.h/niceTimer.h)                      |
\******************************************************************************/
void RandomLines2() {
  continuePattern = true;
  int animationSpeed =70;
  int x;
  int y;
  int z;
  while (continuePattern) {
    for (int tt = random(4,8); tt > 0; tt--) { 
      x = random(0,4);
      y = random(0,4);
      z = random(0,4);
      switch(random(0,6)) {
        case 0:
        z = 4;
        if (z = 4) {
          delay(300);
        }
        for (int i = 4; i > 0; i--) {
          z = z - 1;
          drawLed(color,5,x,y,z);
          flushBuffer();
          delay(animationSpeed);
        }
        break;
        case 1:
        z = -1;
        if (z = -1) {
          delay(300);
        }
        for (int i = 4; i > 0; i--) {
          z = z + 1;
          drawLed(color,5,x,y,z);
          flushBuffer();
          delay(animationSpeed);
        }
        break;
        case 2:
        y = 4;
        if (y = 4) {
          delay(300);
        }
        for (int i = 4; i > 0; i--) {
          y = y - 1;
          drawLed(color,5,x,y,z);
          flushBuffer();
          delay(animationSpeed);
        } 
        break;
        case 3:
        y = -1;
        if (y = -1) {
          delay(300);
        }
        for (int i = 4; i > 0; i--) {
          y = y + 1;
          drawLed(color,5,x,y,z);
          flushBuffer();
          delay(animationSpeed);
        } 
        break;    
        case 4:
        x = 4;
        if (x = 4) {
          delay(300);
        }
        for (int i = 4; i > 0; i--) {
          x = x - 1;
          drawLed(color,5,x,y,z);
          flushBuffer();
          delay(animationSpeed);
        }
        break;
        case 5:
        x = -1;
        if (x = -1) {
          delay(300);
        }
        for (int i = 4; i > 0; i--) {
          x = x + 1;
          drawLed(color,5,x,y,z);
          flushBuffer();
          delay(animationSpeed);
        }
        break;
      } 
      color = nextColor(color);
    }
    flushBuffer();
    clearBuffer();   
  }
}
